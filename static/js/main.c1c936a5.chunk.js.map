{"version":3,"sources":["Homepage.js","Bio.js","More.js","App.js","serviceWorker.js","index.js"],"names":["Homepage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Component","Bio","props","_this","call","state","data","_this2","d3","then","d","setState","console","log","map","i","time","location","href","More","App","HashRouter","Link","to","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1c936a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { Jumbotron } from 'reactstrap';\nimport './style.css';\n\nexport class Homepage extends Component {\n    render() {\n        return (\n        <div className=\"home\">\n            <h1>Welcome to my homepage</h1>\n            <p>For more information, check out my bio page</p>\n        </div>\n        );\n    }\n}\n\n\n\n\n","import React, { Component } from 'react';\n// import { Jumbotron } from 'reactstrap';\nimport * as d3 from 'd3';\nimport './style.css';\n\nexport class Bio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        };\n      }\n    \n    componentDidMount() {\n        d3.csv(\"data.csv\").then((d) => {\n            this.setState({ data: d });\n        });\n    }\n\n    render() {\n        console.log(this.state.data)\n        let url=\"https://www.mccallie.org/\"\n        let sz=\"https://www.lonelyplanet.com/china/guangdong/shenzhen\"\n        return (\n            <div>\n                <h1>Short Bio</h1>\n                {this.state.data.map((d, i) => {\n                    return <p key={\"person-\" + i}>Year: {d.time} I lived in: {d.location}</p>\n                })}\n                <p className=\"long\">I was born in coastal city in southern China called \n                <a href={sz}>Shenzhen</a>, where\n                I spent most of my childhood in. In order to get better education, I \n                came to U.S. at 2013 and attended <a href={url}>McCallie School</a>, a \n                top private bording school in the nation. At McCallie, I was not only \n                immersed into rigorous academic environment, my experience as a varsity \n                rower also transformed me into a mentally tough and self-disciplined person.\n                ``Upon graduation, I chose \n                University of Washington due to its high reputation in IT industry and \n                resources available to Seattle. At UW, I am fascinated by the interaction \n                among technology, people, and design. I am still exploring different options \n                within the field of information technology, but I envision myself to be a \n                creative, detail-oriented, and aspiring UX designer in my early career. \n                Preferrably, I can work in a sunny place like SoCal. Outside the classroom, my \n                current main focuses are build an effective and visually appealing portfolio and \n                finding opportunities to practice my skills. Other personal interests include \n                sports, baking, and traveling.\n                </p>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n// import { Jumbotron } from 'reactstrap';\nimport './style.css';\n\nexport class More extends Component {\n    render() {\n        let social=\"https://www.instagram.com/_kcsun__/\"\n        let work=\"www.linkedin.com/in/kechengsun\"\n        \n        return (\n        <div className=\"info\">\n            <h1>More info</h1>\n            <p>Follow my <a href={social}>Instagram</a> and <a href={work}>Linkedln</a></p>\n        </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './style.css';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Homepage } from './Homepage';\nimport { Bio } from './Bio';\nimport { More } from './More';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Link to=\"/\" className=\"link\">Home</Link>\n          { ' ' }\n          <Link to=\"/Bio\" className=\"link\">Bio</Link>\n          { ' ' }\n          <Link to=\"/More\" className=\"link\">More</Link>\n          <Route exact path=\"/\" component={ Homepage } />\n          <Route path=\"/bio\" component={ Bio } />\n          <Route path=\"/more\" component={ More } />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}